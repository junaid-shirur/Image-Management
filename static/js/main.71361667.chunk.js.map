{"version":3,"sources":["components/Images.js","features/ImageSlice.js","components/AddPopUp.js","components/SelectPopUp.js","components/Header.js","App.js","app/store.js","index.js"],"names":["Images","data","selectedDelete","setSelectedDelete","selectAll","filter","Wrapper","styled","div","Discription","span","length","map","img","type","id","checked","isChecked","onChange","e","target","href","urls","full","download","style","color","textDecoration","display","src","thumb","alt","alt_description","user","name","created_at","substring","links","fetchImages","createAsyncThunk","a","axios","get","catch","err","console","log","response","results","ImageSlice","createSlice","initialState","images","searchText","reducers","deleteImage","state","action","payload","uploadImage","push","extraReducers","pending","fulfilled","rejected","actions","getImages","ImageHeader","ImageWrap","AddPopUp","props","useState","image","setImage","description","setdescription","useEffect","dispatch","useDispatch","Modal","size","centered","Header","closeButton","Body","className","value","defaultValue","width","height","Footer","Button","onClick","preventDefault","date","Date","toISOString","onHide","alert","HeaderWrapper","SelectPopUp","setimages","setname","isPop","imageId","addPopUp","setaddPopUp","search","animation","placeholder","show","SearchBar","SortingButtons","App","modalShow","setModalShow","Container","useSelector","filterImages","filterBy","imageList","Object","assign","sort","b","toLowerCase","setSearchText","setselectAll","filtered","setfiltered","backgroundColor","temp","forEach","disabled","item","DynamicDisable","filteredData","startsWith","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71361667.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default function Images({ data, selectedDelete, setSelectedDelete, selectAll, filter }) {\r\n\r\n    \r\n    const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    div{\r\n        padding: 10px;\r\n        margin: auto;\r\n        display: grid;\r\n        &:hover{\r\n           background-color: #DCDCDC;\r\n           border-radius: 9px;\r\n           transition : 0.3s ease\r\n        }\r\n\r\n        /* input {        \r\n            visibility:hidden\r\n        }\r\n        &:hover { */\r\n            input {\r\n            position: absolute;\r\n            border-radius: 9px;\r\n            height: 22px;\r\n            width: 23px;\r\n            cursor: pointer;\r\n            /* visibility:visible */\r\n            }\r\n            /* } */\r\n    }\r\n    \r\n    \r\n    img{\r\n        margin: 5px;\r\n        width: 260px;\r\n        height: 180px;\r\n        border-radius: 9px;\r\n        \r\n    }\r\n    `\r\n    const Discription = styled.span`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    p{\r\n        font-size:12px;\r\n    }\r\n    `\r\n    return (\r\n        <>\r\n            <Wrapper>\r\n                {filter && filter.length > 1 ? filter.map((img) => {\r\n                    return (\r\n                        <div key={img.id}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id={img.id}\r\n                                checked={(selectedDelete[img.id] && selectedDelete[img.id].isChecked) || selectAll}\r\n                                onChange={(e) => { setSelectedDelete({ ...selectedDelete, [img.id]: { isChecked: e.target.checked } }) }} />\r\n                            <a href={img.urls.full} download style={{ color: 'black', textDecoration: 'none', display: 'grid' }}>\r\n                                <img src={img.urls.thumb} alt={img.alt_description} />\r\n                                <Discription>\r\n                                <span>{img.user.name}</span> \r\n                                <p>{img.created_at.substring(0,10)}</p>\r\n                                </Discription>\r\n                            </a>\r\n                        </div>\r\n                    )\r\n                }) : data ? data.map((img) => {\r\n                    return (\r\n                        <div key={img.id}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id={img.id}\r\n                                checked={(selectedDelete[img.id] && selectedDelete[img.id].isChecked) || selectAll}\r\n                                onChange={(e) => { setSelectedDelete({ ...selectedDelete, [img.id]: { isChecked: e.target.checked } }) }} />\r\n                            <a href={img.links.download} download style={{ color: 'black', textDecoration: 'none', display: 'grid' }}>\r\n                                <img src={img.urls.thumb} alt={img.alt_description} />\r\n                                <Discription>\r\n                                <span>{img.user.name}</span> \r\n                                <p>{img.created_at.substring(0,10)}</p>\r\n                                </Discription>\r\n                            </a>\r\n                        </div>\r\n                    )\r\n                }) : <p>loading...</p>}\r\n            </Wrapper>\r\n        </>\r\n    )\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\nexport const fetchImages = createAsyncThunk(\r\n    \"Images/fetchImages\",\r\n    async (name) => {\r\n        const response = await axios.get(`https://api.unsplash.com/search/photos/?&query=${name}&per_page=20&count=20&client_id=vXO48hCN-bQrna6DYg_yzZlpX_cdb51VHLEzJEDCML8`)\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        return response.data.results\r\n    }\r\n)\r\nconst initialState = {\r\n    images: [],\r\n    searchText: \"cat\"\r\n\r\n}\r\n\r\nconst ImageSlice = createSlice({\r\n    name: \"Images\",\r\n    initialState,\r\n    reducers: {\r\n        deleteImage: (state, action) => {\r\n            state.images = action.payload\r\n\r\n        },\r\n        filter: (state, action) => {\r\n            state.images = action.payload\r\n        },\r\n        uploadImage: (state, action) => {\r\n            state.images.push(action.payload)\r\n        },\r\n        \r\n    },\r\n    extraReducers: {\r\n        [fetchImages.pending]: () => {\r\n            console.log(\"Pending\");\r\n        },\r\n        [fetchImages.fulfilled]: (state, { payload }) => {\r\n            console.log(\"Fetched Successfully!\");\r\n            return { ...state, images: payload };\r\n        },\r\n        [fetchImages.rejected]: () => {\r\n            console.log(\"Rejected!\");\r\n        },\r\n    }\r\n\r\n});\r\n\r\nexport const { deleteImage, filter, uploadImage } = ImageSlice.actions\r\nexport default ImageSlice.reducer;\r\nexport const searchName = (state) => state.Images.searchText;\r\nexport const getImages = (state) => state.Images.images","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { uploadImage } from '../features/ImageSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst ImageHeader = styled.div`\r\nh3{\r\n    color: #DCDCDC;\r\n}\r\nspan{\r\n        color: #DCDCDC;\r\n        font-size: 13px;\r\n    }\r\n\r\n`\r\nconst ImageWrap = styled.div`\r\nborder: 2px grey dotted;\r\nborder-radius: 9px;\r\ndisplay: block;\r\nimg{\r\n    width: 100%;\r\n    height: 380px;\r\n    border-radius: 9px;\r\n    padding: 10px;\r\n    border-radius: 15px;\r\n}\r\n.queries{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    div{\r\n       \r\n        input{\r\n            width: 100%;\r\n            border: 1px grey solid;\r\n            border-radius: 3px;\r\n        }\r\n        p{\r\n            font-weight: 150;\r\n        }\r\n        span{\r\n            color: grey;\r\n        }\r\n    }\r\n}\r\n\r\n`\r\n\r\nexport default function AddPopUp(props) {\r\n    const [image, setImage] = useState()\r\n\r\n    const [description, setdescription] = useState()\r\n    useEffect(() => {\r\n        const image = props.data.filter((img) => img.id === props.id)\r\n        setImage(image[0])\r\n    }, [])\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        let date = new Date()\r\n        image.user.name = description\r\n        image.created_at = date.toISOString()\r\n        dispatch(uploadImage(image))\r\n        props.onHide()\r\n        alert(\"image upload successfull\")\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <ImageHeader>\r\n                    <h3>Add Image</h3>\r\n                    <span>Edit your media files here</span>\r\n                </ImageHeader>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {image && <ImageWrap>\r\n                    <img src={image.urls.thumb} alt={image.user.name} />\r\n                    <div className=\"queries\">\r\n                        <div>\r\n                            <span>Title</span> <br />\r\n                            <input type=\"text\" onChange={(e)=>setdescription(e.target.value)} defaultValue={image.user.name} />\r\n                        </div>\r\n                        <div>\r\n                            <span>Type</span>\r\n                            <p>JPG</p>\r\n                        </div>\r\n                        <div>\r\n                            <span>Size</span>\r\n                            <p>400kb</p>\r\n                        </div>\r\n                        <div>\r\n                            <span>Dimension</span>\r\n                            <p>{image.width + \" x \" + image.height}</p>\r\n                        </div>\r\n                    </div>\r\n                </ImageWrap>}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={handleSave}>Submit</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nimport AddPopUp from './AddPopUp';\r\nimport axios from 'axios';\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n    h3{\r\n        color: #DCDCDC;\r\n    }\r\n    input{\r\n        margin-right: 15px;\r\n        border: 1px aliceblue solid;\r\n    }\r\n    button{\r\n        background-color: aliceblue;\r\n        border-radius: 5px;\r\n        border: none;\r\n    }\r\n    span{\r\n        color: #DCDCDC;\r\n        font-size: 13px;\r\n    }\r\n\r\n`\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nposition: relative;\r\npadding: 10px;\r\nborder: 2px grey dotted;\r\nborder-radius: 9px;\r\ndiv{\r\n    margin: auto;\r\n    display: grid;\r\n    \r\n}\r\n#button{\r\n    background-color: white;\r\n    border: none;\r\n    &:hover{\r\n       background-color: #DCDCDC;\r\n       border-radius: 9px;\r\n\r\n    }\r\n}\r\nimg{\r\n    margin-bottom: 5px;\r\n    width: 160px;\r\n    height: 100px;\r\n    border-radius: 9px;\r\n    cursor: pointer;\r\n}\r\n`\r\nexport default function SelectPopUp(props) {\r\n    useEffect(() => {\r\n        fetchImages(\"random\")\r\n    }, [])\r\n\r\n\r\n    const [images, setimages] = useState()\r\n\r\n    const [name, setname] = useState(\"waterfalls\")\r\n\r\n    const [addPopUp, setaddPopUp] = useState({\r\n        isPop: false,\r\n        imageId: \"\",\r\n    })\r\n\r\n    const fetchImages = async (search) => {\r\n        const response = await axios.get(`https://api.unsplash.com/search/photos/?&query=${search}&count=20&per_page=20&client_id=vXO48hCN-bQrna6DYg_yzZlpX_cdb51VHLEzJEDCML8`)\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        setimages(response.data.results)\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <HeaderWrapper>\r\n                    <h3>Select Image</h3>\r\n                    <span>search and select an image</span>\r\n                    <div>\r\n                        <input type=\"text\" onChange={(e) => setname(e.target.value)} placeholder=\"search\" />\r\n                        <button className=\"btn\" onClick={() => fetchImages(name)}>search</button>\r\n                    </div>\r\n                </HeaderWrapper>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Wrapper>\r\n                    {images ? images.map((img) => {\r\n\r\n                        return (\r\n                            <div key={img.id}>\r\n                                <button id=\"button\" onClick={() => {\r\n                                    setaddPopUp({ ...addPopUp, isPop: !addPopUp.isPop, imageId: img.id })\r\n                                }}>\r\n                                    <img src={img.urls.thumb} alt={img.alt_description} />\r\n                                </button>\r\n                                {addPopUp.isPop ?\r\n                                    <AddPopUp\r\n                                        show={true}\r\n                                        onHide={() => setaddPopUp({\r\n                                            ...addPopUp, isPop: false\r\n                                        }),props.onHide}\r\n                                        data={images}\r\n                                        id={addPopUp.imageId}\r\n\r\n                                    /> : <></>}\r\n                            </div>\r\n                        )\r\n                    }) : <p>loading...</p>}\r\n                </Wrapper>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>select</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","\r\nimport styled from 'styled-components'\r\nexport const SearchBar = styled.div`\r\n\r\n    display:flex;\r\n    border: 0.5px aliceblue solid;\r\n    margin: auto;\r\n    padding: 5px;\r\n    border-radius: 9px;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    align-items: center;\r\n    label{\r\n        button{\r\n            background-color: white;\r\n            border: none;\r\n            \r\n        }\r\n    }\r\n    input{\r\n        border: 1px lightgray solid;\r\n        border-radius: 5px;\r\n    }\r\n\r\n`\r\nexport const Wrapper = styled.div`\r\n    margin: 10px;\r\n    padding: 10px;\r\n    display: block;\r\n    border: 1px aliceblue solid;\r\n    border-radius: 9px;\r\n    background-color: white;\r\n    align-items: center;\r\n\r\n`\r\nexport const SortingButtons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    border-radius: 9px;\r\n    background-color: white;\r\n    align-items: center;\r\n    button{\r\n        margin-right:3px;\r\n        border: 1px aliceblue solid;\r\n        background-color: white;\r\n        color: black;\r\n        margin-top: 3px;\r\n        border-radius: 5px;\r\n        &:hover{\r\n            background-color: aliceblue;\r\n\r\n        }\r\n    }\r\n    div{\r\n        margin-right: 5px;\r\n        border-right: 1px aliceblue solid;\r\n        margin-left: 5px;\r\n        background-color: white;\r\n\r\n    }\r\n`\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Images from './components/Images'\r\nimport SelectPopUp from './components/SelectPopUp';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteImage, fetchImages, filter } from './features/ImageSlice';\r\nimport styled from 'styled-components';\r\nimport { getImages } from './features/ImageSlice';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Wrapper, SearchBar, SortingButtons } from './components/Header';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nfunction App() {\r\n  const name = \"office\"\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchImages(name))\r\n  }, [])\r\n\r\n  const Container = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    margin: auto;\r\n    align-items: center;\r\n    h4{\r\n      font-family: 'Times New Roman', Times, serif;\r\n    }\r\n    span{\r\n      color: grey;\r\n      font-size: small;\r\n    }\r\n    button{\r\n      background-color: #24a0ed ;\r\n      border: none;\r\n      border-radius: 9px;\r\n      cursor: pointer;\r\n      font-weight: 200;\r\n      color: white;\r\n    }\r\n   \r\n  `\r\n  const state = useSelector(getImages)\r\n\r\n  const filterImages = (filterBy) => {\r\n    var imageList = Object.assign([], state)\r\n\r\n    if (filterBy === 'title') {\r\n      imageList.sort((a, b) => {\r\n        if (a.user.name.toLowerCase() < b.user.name.toLowerCase()) {\r\n          return -1\r\n        }\r\n        if (a.user.name.toLowerCase() > b.user.name.toLowerCase()) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n    else if (filterBy === 'date') {\r\n\r\n      imageList.sort((a, b) => {\r\n\r\n        if (a.created_at < b.created_at) {\r\n          return -1\r\n        }\r\n        if (a.created_at > b.created_at) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n    else {\r\n\r\n      imageList.sort((a, b) => {\r\n\r\n        if (a.height * a.width < b.height * a.width) {\r\n          return -1\r\n        }\r\n        if (a.height * a.width > b.height * a.width) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    dispatch(filter(imageList))\r\n  }\r\n\r\n  const [searchText, setSearchText] = useState()\r\n\r\n  const [selectedDelete, setSelectedDelete] = useState([]);\r\n  const [selectAll, setselectAll] = useState(false);\r\n  const [filtered, setfiltered] = useState(null)\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    var imageList = Object.assign([], state)\r\n    setSearchText(e.target.value.toLowerCase())\r\n    if (searchText !== '') {\r\n      const results = imageList.filter((image) => {\r\n        return image.user.name.toLowerCase().startsWith(searchText);\r\n      })\r\n      setfiltered(results)\r\n    } else if(searchText=='') {\r\n      setfiltered('')\r\n    }\r\n  }\r\n\r\n  const onSelectAll = () => {\r\n    var temp = {}\r\n    state.forEach(img => {\r\n      temp = { ...temp, [img.id]: { isChecked: !selectAll } }\r\n    });\r\n    setSelectedDelete(temp)\r\n    setselectAll(!selectAll)\r\n  \r\n  }\r\n\r\n  const handleDelete = () => {\r\n    const filteredData = state.filter((img) =>!(selectedDelete[img.id] && selectedDelete[img.id].isChecked))\r\n    dispatch(deleteImage(filteredData))\r\n  }\r\n\r\n  const DynamicDisable=()=>{\r\n\r\n    for (let item in selectedDelete) {\r\n      return !selectedDelete[item].isChecked\r\n    }\r\n    return true\r\n  }\r\n\r\n  return (\r\n\r\n    <div style={{ backgroundColor: \"#F5F5F5\" }} >\r\n\r\n      <Container>\r\n        <div>\r\n          <h4>Media Library</h4>\r\n          <span>Create,Edit and manage the media on your community</span>\r\n        </div>\r\n        <button className=\"btn\" onClick={() => setModalShow(true)}>Add Image</button>\r\n      </Container>\r\n\r\n      <Wrapper>\r\n\r\n        <SearchBar>\r\n          <label>\r\n            select All{\" \"}\r\n            <input onChange={onSelectAll} checked={selectAll} type=\"checkbox\" />{\" \"}\r\n            <button disabled={DynamicDisable()} onClick={handleDelete}><DeleteOutlinedIcon /></button>\r\n          </label>\r\n          <input type=\"text\" value={searchText} placeholder=\"search...\" onChange={handleChange} />\r\n        </SearchBar>\r\n\r\n        <SortingButtons>\r\n          <div>\r\n            sort by :{\" \"}\r\n          </div>\r\n          <button className=\"btn\" onClick={() => filterImages('title')}>Title</button>\r\n          <button className=\"btn\" onClick={() => filterImages('date')}>date</button>\r\n          <button className=\"btn\" onClick={() => filterImages('size')}>size</button>\r\n        </SortingButtons>\r\n\r\n      </Wrapper>\r\n\r\n      <SelectPopUp\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n\r\n      <Images\r\n        filter={filtered}\r\n        data={state}\r\n        selectedDelete={selectedDelete}\r\n        selectAll={selectAll}\r\n        setSelectedDelete={setSelectedDelete}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport ImageSlice from '../features/ImageSlice';\r\nexport const store = configureStore({\r\n  reducer: {\r\n        Images: ImageSlice\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}