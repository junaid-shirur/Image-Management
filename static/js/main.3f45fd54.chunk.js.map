{"version":3,"sources":["components/Images.js","features/ImageSlice.js","components/AddPopUp.js","components/SelectPopUp.js","components/Header.js","App.js","app/store.js","index.js"],"names":["Images","data","selectedDelete","setSelectedDelete","selectAll","filter","Wrapper","styled","div","Discription","span","length","map","img","type","id","checked","isChecked","onChange","e","target","href","urls","full","download","style","color","textDecoration","display","src","thumb","alt","alt_description","user","name","created_at","substring","links","fetchImages","createAsyncThunk","axios","get","catch","err","console","log","response","results","ImageSlice","createSlice","initialState","images","searchText","reducers","deleteImage","state","action","payload","uploadImage","push","extraReducers","pending","fulfilled","rejected","actions","getImages","ImageHeader","ImageWrap","AddPopUp","props","useState","image","setImage","description","setdescription","useEffect","dispatch","useDispatch","Modal","size","centered","Header","closeButton","Body","className","value","defaultValue","width","height","Footer","Button","onClick","preventDefault","date","Date","toISOString","onHide","alert","HeaderWrapper","SelectPopUp","setimages","setname","isPop","imageId","addPopUp","setaddPopUp","search","animation","placeholder","show","SearchBar","SortingButtons","App","modalShow","setModalShow","Container","useSelector","filterImages","filterBy","imageList","Object","assign","sort","a","b","toLowerCase","setselectAll","filtered","backgroundColor","fontWeight","temp","forEach","disabled","item","DynamicDisable","filteredData","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f45fd54.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default function Images({ data, selectedDelete, setSelectedDelete, selectAll, filter }) {\r\n\r\n    \r\n    const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    div{\r\n        padding: 10px;\r\n        margin: auto;\r\n        display: grid;\r\n        &:hover{\r\n           background-color: #DCDCDC;\r\n           border-radius: 9px;\r\n           transition : 0.3s ease\r\n        }\r\n\r\n        /* input {        \r\n            visibility:hidden\r\n        }\r\n        &:hover { */\r\n            input {\r\n            position: absolute;\r\n            border-radius: 9px;\r\n            height: 22px;\r\n            width: 23px;\r\n            cursor: pointer;\r\n            /* visibility:visible */\r\n            }\r\n            /* } */\r\n    }\r\n    \r\n    \r\n    img{\r\n        margin: 5px;\r\n        width: 260px;\r\n        height: 180px;\r\n        border-radius: 9px;\r\n        \r\n    }\r\n    `\r\n    const Discription = styled.span`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    p{\r\n        font-size:12px;\r\n    }\r\n    `\r\n    return (\r\n        <>\r\n            <Wrapper>\r\n                {filter && filter.length > 1 ? filter.map((img) => {\r\n                    return (\r\n                        <div key={img.id}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id={img.id}\r\n                                checked={(selectedDelete[img.id] && selectedDelete[img.id].isChecked) || selectAll}\r\n                                onChange={(e) => { setSelectedDelete({ ...selectedDelete, [img.id]: { isChecked: e.target.checked } }) }} />\r\n                            <a href={img.urls.full} download style={{ color: 'black', textDecoration: 'none', display: 'grid' }}>\r\n                                <img src={img.urls.thumb} alt={img.alt_description} />\r\n                                <Discription>\r\n                                <span>{img.user.name}</span> \r\n                                <p>{img.created_at.substring(0,10)}</p>\r\n                                </Discription>\r\n                            </a>\r\n                        </div>\r\n                    )\r\n                }) : data ? data.map((img) => {\r\n                    return (\r\n                        <div key={img.id}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id={img.id}\r\n                                checked={(selectedDelete[img.id] && selectedDelete[img.id].isChecked) || selectAll}\r\n                                onChange={(e) => { setSelectedDelete({ ...selectedDelete, [img.id]: { isChecked: e.target.checked } }) }} />\r\n                            <a href={img.links.download} download style={{ color: 'black', textDecoration: 'none', display: 'grid' }}>\r\n                                <img src={img.urls.thumb} alt={img.alt_description} />\r\n                                <Discription>\r\n                                <span>{img.user.name}</span> \r\n                                <p>{img.created_at.substring(0,10)}</p>\r\n                                </Discription>\r\n                            </a>\r\n                        </div>\r\n                    )\r\n                }) : <p>loading...</p>}\r\n            </Wrapper>\r\n        </>\r\n    )\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\nexport const fetchImages = createAsyncThunk(\r\n    \"Images/fetchImages\",\r\n    async (name) => {\r\n        const response = await axios.get(`https://api.unsplash.com/search/photos/?&query=${name}&per_page=20&count=20&client_id=vXO48hCN-bQrna6DYg_yzZlpX_cdb51VHLEzJEDCML8`)\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        return response.data.results\r\n    }\r\n)\r\nconst initialState = {\r\n    images: [],\r\n    searchText: \"cat\"\r\n\r\n}\r\n\r\nconst ImageSlice = createSlice({\r\n    name: \"Images\",\r\n    initialState,\r\n    reducers: {\r\n        deleteImage: (state, action) => {\r\n            state.images = action.payload\r\n\r\n        },\r\n        filter: (state, action) => {\r\n            state.images = action.payload\r\n        },\r\n        uploadImage: (state, action) => {\r\n            state.images.push(action.payload)\r\n        },\r\n        \r\n    },\r\n    extraReducers: {\r\n        [fetchImages.pending]: () => {\r\n            console.log(\"Pending\");\r\n        },\r\n        [fetchImages.fulfilled]: (state, { payload }) => {\r\n            console.log(\"Fetched Successfully!\");\r\n            return { ...state, images: payload };\r\n        },\r\n        [fetchImages.rejected]: () => {\r\n            console.log(\"Rejected!\");\r\n        },\r\n    }\r\n\r\n});\r\n\r\nexport const { deleteImage, filter, uploadImage } = ImageSlice.actions\r\nexport default ImageSlice.reducer;\r\nexport const searchName = (state) => state.Images.searchText;\r\nexport const getImages = (state) => state.Images.images","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { uploadImage } from '../features/ImageSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst ImageHeader = styled.div`\r\nh3{\r\n    color: #DCDCDC;\r\n}\r\nspan{\r\n        color: #DCDCDC;\r\n        font-size: 13px;\r\n    }\r\n\r\n`\r\nconst ImageWrap = styled.div`\r\nborder: 2px grey dotted;\r\nborder-radius: 9px;\r\ndisplay: block;\r\nimg{\r\n    width: 100%;\r\n    height: 380px;\r\n    border-radius: 9px;\r\n    padding: 10px;\r\n    border-radius: 15px;\r\n}\r\n.queries{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    div{\r\n       \r\n        input{\r\n            width: 100%;\r\n            border: 1px grey solid;\r\n            border-radius: 3px;\r\n        }\r\n        p{\r\n            font-weight: 150;\r\n        }\r\n        span{\r\n            color: grey;\r\n        }\r\n    }\r\n}\r\n\r\n`\r\n\r\nexport default function AddPopUp(props) {\r\n    const [image, setImage] = useState()\r\n\r\n    const [description, setdescription] = useState()\r\n    useEffect(() => {\r\n        const image = props.data.filter((img) => img.id === props.id)\r\n        setImage(image[0])\r\n    }, [])\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        let date = new Date()\r\n        image.user.name = description\r\n        image.created_at = date.toISOString()\r\n        dispatch(uploadImage(image))\r\n        props.onHide()\r\n        alert(\"image upload successfull\")\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <ImageHeader>\r\n                    <h3>Add Image</h3>\r\n                    <span>Edit your media files here</span>\r\n                </ImageHeader>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {image && <ImageWrap>\r\n                    <img src={image.urls.thumb} alt={image.user.name} />\r\n                    <div className=\"queries\">\r\n                        <div>\r\n                            <span>Title</span> <br />\r\n                            <input type=\"text\" onChange={(e)=>setdescription(e.target.value)} defaultValue={image.user.name} />\r\n                        </div>\r\n                        <div>\r\n                            <span>Type</span>\r\n                            <p>JPG</p>\r\n                        </div>\r\n                        <div>\r\n                            <span>Size</span>\r\n                            <p>400kb</p>\r\n                        </div>\r\n                        <div>\r\n                            <span>Dimension</span>\r\n                            <p>{image.width + \" x \" + image.height}</p>\r\n                        </div>\r\n                    </div>\r\n                </ImageWrap>}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={handleSave}>Submit</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nimport AddPopUp from './AddPopUp';\r\nimport axios from 'axios';\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n    h3{\r\n        color: #DCDCDC;\r\n    }\r\n    input{\r\n        margin-right: 15px;\r\n        border: 1px aliceblue solid;\r\n    }\r\n    button{\r\n        background-color: aliceblue;\r\n        border-radius: 5px;\r\n        border: none;\r\n    }\r\n    span{\r\n        color: #DCDCDC;\r\n        font-size: 13px;\r\n    }\r\n\r\n`\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nposition: relative;\r\npadding: 10px;\r\nborder: 2px grey dotted;\r\nborder-radius: 9px;\r\ndiv{\r\n    margin: auto;\r\n    display: grid;\r\n    \r\n}\r\n#button{\r\n    background-color: white;\r\n    border: none;\r\n    &:hover{\r\n       background-color: #DCDCDC;\r\n       border-radius: 9px;\r\n\r\n    }\r\n}\r\nimg{\r\n    margin-bottom: 5px;\r\n    width: 160px;\r\n    height: 100px;\r\n    border-radius: 9px;\r\n    cursor: pointer;\r\n}\r\n`\r\nexport default function SelectPopUp(props) {\r\n    useEffect(() => {\r\n        fetchImages(\"random\")\r\n    }, [])\r\n\r\n\r\n    const [images, setimages] = useState()\r\n\r\n    const [name, setname] = useState(\"waterfalls\")\r\n\r\n    const [addPopUp, setaddPopUp] = useState({\r\n        isPop: false,\r\n        imageId: \"\",\r\n    })\r\n\r\n    const fetchImages = async (search) => {\r\n        const response = await axios.get(`https://api.unsplash.com/search/photos/?&query=${search}&count=20&per_page=20&client_id=vXO48hCN-bQrna6DYg_yzZlpX_cdb51VHLEzJEDCML8`)\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        setimages(response.data.results)\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <HeaderWrapper>\r\n                    <h3>Select Image</h3>\r\n                    <span>search and select an image</span>\r\n                    <div>\r\n                        <input type=\"text\" onChange={(e) => setname(e.target.value)} placeholder=\"search\" />\r\n                        <button className=\"btn\" onClick={() => fetchImages(name)}>search</button>\r\n                    </div>\r\n                </HeaderWrapper>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Wrapper>\r\n                    {images ? images.map((img) => {\r\n\r\n                        return (\r\n                            <div key={img.id}>\r\n                                <button id=\"button\" onClick={() => {\r\n                                    setaddPopUp({ ...addPopUp, isPop: !addPopUp.isPop, imageId: img.id })\r\n                                }}>\r\n                                    <img src={img.urls.thumb} alt={img.alt_description} />\r\n                                </button>\r\n                                {addPopUp.isPop ?\r\n                                    <AddPopUp\r\n                                        show={true}\r\n                                        onHide={() => setaddPopUp({\r\n                                            ...addPopUp, isPop: false\r\n                                        }),props.onHide}\r\n                                        data={images}\r\n                                        id={addPopUp.imageId}\r\n\r\n                                    /> : <></>}\r\n                            </div>\r\n                        )\r\n                    }) : <p>loading...</p>}\r\n                </Wrapper>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>select</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","\r\nimport styled from 'styled-components'\r\nexport const SearchBar = styled.div`\r\n\r\n    display:flex;\r\n    border: 0.5px aliceblue solid;\r\n    margin: auto;\r\n    padding: 5px;\r\n    border-radius: 9px;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    align-items: center;\r\n    label{\r\n        button{\r\n            background-color: white;\r\n            border: none;\r\n            \r\n        }\r\n    }\r\n    input{\r\n        border: 1px lightgray solid;\r\n        border-radius: 5px;\r\n    }\r\n\r\n`\r\nexport const Wrapper = styled.div`\r\n    margin: 10px;\r\n    padding: 10px;\r\n    display: block;\r\n    border: 1px aliceblue solid;\r\n    border-radius: 9px;\r\n    background-color: white;\r\n    align-items: center;\r\n\r\n`\r\nexport const SortingButtons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    border-radius: 9px;\r\n    background-color: white;\r\n    align-items: center;\r\n    button{\r\n        margin-right:3px;\r\n        border: 1px aliceblue solid;\r\n        background-color: white;\r\n        color: black;\r\n        margin-top: 3px;\r\n        border-radius: 5px;\r\n        &:hover{\r\n            background-color: aliceblue;\r\n\r\n        }\r\n    }\r\n    div{\r\n        margin-right: 5px;\r\n        border-right: 1px aliceblue solid;\r\n        margin-left: 5px;\r\n        background-color: white;\r\n\r\n    }\r\n`\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Images from './components/Images'\r\nimport SelectPopUp from './components/SelectPopUp';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteImage, fetchImages, filter } from './features/ImageSlice';\r\nimport styled from 'styled-components';\r\nimport { getImages } from './features/ImageSlice';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Wrapper, SearchBar, SortingButtons } from './components/Header';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nfunction App() {\r\n  const name = \"office\"\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchImages(name))\r\n  }, [])\r\n\r\n  const Container = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    margin: auto;\r\n    align-items: center;\r\n    h4{\r\n      font-family: 'Times New Roman', Times, serif;\r\n    }\r\n    span{\r\n      color: grey;\r\n      font-size: small;\r\n    }\r\n    button{\r\n      background-color: #24a0ed ;\r\n      border: none;\r\n      border-radius: 9px;\r\n      cursor: pointer;\r\n      font-weight: 200;\r\n      color: white;\r\n    }\r\n   \r\n  `\r\n  const state = useSelector(getImages)\r\n\r\n  const filterImages = (filterBy) => {\r\n    var imageList = Object.assign([], state)\r\n\r\n    if (filterBy === 'title') {\r\n      imageList.sort((a, b) => {\r\n        if (a.user.name.toLowerCase() < b.user.name.toLowerCase()) {\r\n          return -1\r\n        }\r\n        if (a.user.name.toLowerCase() > b.user.name.toLowerCase()) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n    else if (filterBy === 'date') {\r\n\r\n      imageList.sort((a, b) => {\r\n\r\n        if (a.created_at < b.created_at) {\r\n          return -1\r\n        }\r\n        if (a.created_at > b.created_at) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n    else {\r\n\r\n      imageList.sort((a, b) => {\r\n\r\n        if (a.height * a.width < b.height * a.width) {\r\n          return -1\r\n        }\r\n        if (a.height * a.width > b.height * a.width) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    dispatch(filter(imageList))\r\n  }\r\n\r\n  const [searchText, setSearchText] = useState()\r\n\r\n  const [selectedDelete, setSelectedDelete] = useState([]);\r\n  const [selectAll, setselectAll] = useState(false);\r\n  const [filtered, setfiltered] = useState(null)\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    var imageList = Object.assign([], state)\r\n    setSearchText(e.target.value.toLowerCase())\r\n    if (searchText !== '') {\r\n      const results = imageList.filter((image) => {\r\n        return image.user.name.toLowerCase().startsWith(searchText);\r\n      })\r\n      setfiltered(results)\r\n    } else if(searchText=='') {\r\n      setfiltered('')\r\n    }\r\n  }\r\n\r\n  const onSelectAll = () => {\r\n    var temp = {}\r\n    state.forEach(img => {\r\n      temp = { ...temp, [img.id]: { isChecked: !selectAll } }\r\n    });\r\n    setSelectedDelete(temp)\r\n    setselectAll(!selectAll)\r\n  \r\n  }\r\n\r\n  const handleDelete = () => {\r\n    const filteredData = state.filter((img) =>!(selectedDelete[img.id] && selectedDelete[img.id].isChecked))\r\n    dispatch(deleteImage(filteredData))\r\n  }\r\n\r\n  const DynamicDisable=()=>{\r\n\r\n    for (let item in selectedDelete) {\r\n      return !selectedDelete[item].isChecked\r\n    }\r\n    return true\r\n  }\r\n\r\n  return (\r\n\r\n    <div style={{ backgroundColor: \"#F5F5F5\" }} >\r\n\r\n      <Container>\r\n        <div>\r\n          <h4>Media Library</h4>\r\n          <span>Create,Edit and manage the media on your community</span>\r\n        </div>\r\n        {/* ToDo: remove inline styles */}\r\n        <button style={{fontWeight: 500}} className=\"btn\" onClick={() => setModalShow(true)}>Add Image</button>\r\n      </Container>\r\n\r\n      <Wrapper>\r\n\r\n        <SearchBar>\r\n          <label>\r\n            select All{\" \"}\r\n            <input onChange={onSelectAll} checked={selectAll} type=\"checkbox\" />{\" \"}\r\n            <button disabled={DynamicDisable()} onClick={handleDelete}><DeleteOutlinedIcon /></button>\r\n          </label>\r\n          {/* <input type=\"text\" value={searchText} placeholder=\"search...\" onChange={handleChange} /> */}\r\n        </SearchBar>\r\n\r\n        <SortingButtons>\r\n          <div>\r\n            sort by :{\" \"}\r\n          </div>\r\n          <button className=\"btn\" onClick={() => filterImages('title')}>Title</button>\r\n          <button className=\"btn\" onClick={() => filterImages('date')}>date</button>\r\n          <button className=\"btn\" onClick={() => filterImages('size')}>size</button>\r\n        </SortingButtons>\r\n\r\n      </Wrapper>\r\n\r\n      <SelectPopUp\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n\r\n      <Images\r\n        filter={filtered}\r\n        data={state}\r\n        selectedDelete={selectedDelete}\r\n        selectAll={selectAll}\r\n        setSelectedDelete={setSelectedDelete}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport ImageSlice from '../features/ImageSlice';\r\nexport const store = configureStore({\r\n  reducer: {\r\n        Images: ImageSlice\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}